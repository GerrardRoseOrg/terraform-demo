
// Tooling account
1. Authenticate shell with Tooling SSO credentials

2. Deploy to Dev *** terraform direct against dev environment ***
terraform init -reconfigure -upgrade -backend-config="bucket=gerrard.rose.org11.tooling-terraform-demo-terraform-state" -backend-config="key=dev/terraform-eu-west-1/terraform.tfstate" -backend-config="region=eu-west-2" -backend-config="dynamodb_table=terraform-demo-terraform-state-lock" -backend-config="encrypt=true"
terraform plan -var-file "environments/dev/variables.tfvars" -var "env=dev" -out=tfplan -compact-warnings

3. Deploy to Prod *** terraform direct against prod environment ***
terraform init -reconfigure -upgrade -backend-config="bucket=gerrard.rose.org11.tooling-terraform-demo-terraform-state" -backend-config="key=prod/terraform-eu-west-1/terraform.tfstate" -backend-config="region=eu-west-2" -backend-config="dynamodb_table=terraform-demo-terraform-state-lock" -backend-config="encrypt=true"
terraform plan -var-file "environments/prod/variables.tfvars" -var "env=prod" -out=tfplan -compact-warnings



# Old manual commands
# Direct terraform
// Dev account
1. 
Authenticate shell
2. 
terraform init -upgrade
3. 
terraform plan -var-file "environments/dev/variables.tfvars" -state=environments/dev/dev.tfstate -out=dev.tfplan -compact-warnings
4. 
terraform apply -state=environments/dev/dev.tfstate "dev.tfplan"
5.
terraform state list -state=environments/dev/dev.tfstate
6.
terraform state show -state=environments/dev/dev.tfstate "module.web_server.module.ec2_instance.aws_instance.default[0]"

// Prod account
1. 
Authenticate shell
2. 
terraform init -upgrade
3. 
terraform plan -var-file "environments/prod/variables.tfvars" -state=environments/prod/prod.tfstate -out=prod.tfplan -compact-warnings
4. 
terraform apply -state=environments/prod/prod.tfstate "prod.tfplan"
5.
terraform state list -state=environments/prod/prod.tfstate
6.
terraform state show -state=environments/prod/prod.tfstate "module.web_server.module.ec2_instance.aws_instance.default[0]"
